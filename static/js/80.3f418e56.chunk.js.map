{"version":3,"file":"static/js/80.3f418e56.chunk.js","mappings":"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","sources":["views/profiles/ProfileEdit.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { CCard, CCardBody, CCol, CRow, CButton } from '@coreui/react'\nimport { supabase } from '../../helper/supabaseClient'\nimport { useNavigate } from 'react-router-dom'\nimport no_pic from '../../assets/images/avatars/no_pic.png';\n\nconst ProfileEdit = () => {\n  const navigate = useNavigate()\n\n  const [profile, setProfile] = useState([])\n\n  useEffect(() => {\n    fetchProfile()\n  }, [])\n\n  const fetchProfile = async () => {\n    try {\n      const {\n        data: { user },\n      } = await supabase.auth.getUser()\n      const { data, error } = await supabase.from('profiles').select('*').eq('id', user.id).single()\n\n      if (error) {\n        throw error\n      }\n\n      if (data) {\n        setProfile(data)\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error.message)\n    }\n  }\n\n  const handleNumericInput = (e) => {\n    const { name, value } = e.target\n    // Filter out non-numeric characters and allow decimal points\n    const numericValue = value.replace(/[^\\d.]/g, '')\n    // Update the state with the filtered value\n    setProfile((prevProfile) => ({\n      ...prevProfile,\n      [name]: numericValue,\n    }))\n  }\n\n  const inputFullName = useRef()\n  const inputGender = useRef()\n  const inputHeight = useRef()\n  const inputWeight = useRef()\n  const inputAge = useRef()\n\n  const handleSubmit = async () => {\n    try {\n      const fullName = inputFullName.current.value\n      const gender = inputGender.current.value\n      const height = inputHeight.current.value\n      const weight = inputWeight.current.value\n      const age = inputAge.current.value\n      const { error } = await supabase.from('profiles').upsert({\n        id: profile.id,\n        full_name: fullName,\n        gender,\n        weight,\n        height,\n        age,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      console.log('Profile updated successfully')\n      navigate('/profile')\n    } catch (error) {\n      console.error('Error updating profile:', error.message)\n    }\n  }\n\n  return (\n    <div>\n      <CCard>\n        <CCardBody>\n          {profile && (\n            <form>\n              <CRow>\n                <CCol xs=\"12\" md=\"3\" className=\"d-flex align-items-center justify-content-center\">\n                  <img src={profile.avatar_url || no_pic} alt=\"Avatar\" width=\"150\" height=\"150\" />\n                </CCol>\n                <br />\n                <CCol xs=\"12\" md=\"auto\">\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"fullName\" className=\"form-label\">\n                      Full Name\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      ref={inputFullName}\n                      id=\"fullName\"\n                      value={profile.full_name}\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"gender\" className=\"form-label\">\n                      Gender\n                    </label>\n                    <select\n                      className=\"form-select\"\n                      id=\"gender\"\n                      ref={inputGender}\n                      value={profile.gender}\n                    >\n                      <option value=\"Male\">Male</option>\n                      <option value=\"Female\">Female</option>\n                    </select>\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"weight\" className=\"form-label\">\n                      Weight (In kg)\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"weight\"\n                      name=\"weight\"\n                      value={profile.weight}\n                      onInput={handleNumericInput}\n                      ref={inputWeight}\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"height\" className=\"form-label\">\n                      Height (In cm)\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"height\"\n                      name=\"height\"\n                      value={profile.height}\n                      onInput={handleNumericInput}\n                      ref={inputHeight}\n                    />\n                  </div>\n                  <div className=\"mb-3\">\n                    <label htmlFor=\"age\" className=\"form-label\">\n                      Age\n                    </label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      id=\"age\"\n                      name=\"age\"\n                      value={profile.age}\n                      onInput={handleNumericInput}\n                      ref={inputAge}\n                    />\n                  </div>\n                </CCol>\n              </CRow>\n              <CButton color=\"primary\" onClick={handleSubmit} className=\"float-end\">\n                Save\n              </CButton>\n            </form>\n          )}\n          {!profile && <p>Loading...</p>}\n        </CCardBody>\n      </CCard>\n    </div>\n  )\n}\n\nexport default ProfileEdit\n"],"names":["ProfileEdit","navigate","useNavigate","profile","setProfile","useState","useEffect","fetchProfile","async","data","user","supabase","auth","getUser","error","from","select","eq","id","single","console","message","handleNumericInput","e","name","value","target","numericValue","replace","prevProfile","inputFullName","useRef","inputGender","inputHeight","inputWeight","inputAge","_jsx","children","CCard","_jsxs","CCardBody","CRow","CCol","xs","md","className","src","avatar_url","no_pic","alt","width","height","htmlFor","type","ref","full_name","gender","weight","onInput","age","CButton","color","onClick","fullName","current","upsert","log"],"sourceRoot":""}