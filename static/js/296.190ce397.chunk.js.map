{"version":3,"file":"static/js/296.190ce397.chunk.js","mappings":"6OAoBA,MAoGA,EApGcA,KACZ,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,IACpCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,KACxCK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,KAEnDO,EAAAA,EAAAA,YAAU,KACRC,GAAY,GACX,IAEH,MAAMA,EAAaC,UACjB,IACE,MACEC,MAAM,KAAEC,UACAC,EAAAA,EAASC,KAAKC,WAElB,KAAEJ,EAAI,MAAEK,SAAgBH,EAAAA,EAC3BI,KAAK,SACLC,OAAO,KACPC,MAAM,aAAc,CAAEC,WAAW,IAEpC,GAAIJ,EACF,MAAMA,EAIRb,EAASQ,GAAQ,IACjBJ,EAAiBI,GAAQ,GAC3B,CAAE,MAAOK,GACPK,QAAQL,MAAM,wBAAyBA,EAAMM,QAC/C,GAkBF,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAACC,UAAU,OAAMH,SAAA,EACrBF,EAAAA,EAAAA,KAACM,EAAAA,GAAW,CAAAJ,SAAC,WACbC,EAAAA,EAAAA,MAACI,EAAAA,GAAS,CAAAL,SAAA,EACRF,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,QAAQ,QAAQC,KAAK,UAASR,UAClCF,EAAAA,EAAAA,KAACW,EAAAA,GAAQ,CAACD,KAAK,eAAcR,UAC3BF,EAAAA,EAAAA,KAACY,EAAAA,GAAQ,CACPC,OAAsB,IAAdrC,EACRsC,UAAU,SACVJ,KAAK,MACL,gBAAc,eACd,gBAA6B,IAAdlC,EACfuC,QAASA,IAAMtC,EAAa,GAAGyB,UAG/BF,EAAAA,EAAAA,KAAA,SAAOgB,KAAK,OAAOC,MAAOpC,EAAaqC,SA9BhCC,IACnBrC,EAAeqC,EAAEC,OAAOH,OAExB,MAAMI,EAAS,GACf,IAAI,IAAIC,EAAI,EAAGA,EAAI3C,EAAM4C,OAAQD,IACjC,CACE,IAAIE,EAAO7C,EAAM2C,GAAGG,KAAKC,cACrBC,EAAMR,EAAEC,OAAOH,MAAMS,cACtBF,EAAKI,SAASD,IACfN,EAAOQ,KAAKlD,EAAM2C,GAEtB,CACAtC,EAAiBqC,EAAO,EAkBkDhB,UAAU,4BAA4ByB,YAAY,mBAAmBC,MAAO,CAACC,QAAS,OAAQC,aAAc,gBAMhLjC,EAAAA,EAAAA,KAACkC,EAAAA,GAAW,CAAAhC,UACVF,EAAAA,EAAAA,KAACmC,EAAAA,GAAQ,CAACzB,KAAK,WAAW,kBAAgB,eAAe0B,QAAuB,IAAd5D,EAAgB0B,UAChFC,EAAAA,EAAAA,MAACkC,EAAAA,GAAM,CAACC,OAAK,EAAApC,SAAA,EACXF,EAAAA,EAAAA,KAACuC,EAAAA,GAAU,CAAArC,UACTC,EAAAA,EAAAA,MAACqC,EAAAA,GAAS,CAAAtC,SAAA,EACRF,EAAAA,EAAAA,KAACyC,EAAAA,GAAgB,CAACC,MAAM,MAAKxC,SAAC,UAC9BF,EAAAA,EAAAA,KAACyC,EAAAA,GAAgB,CAACC,MAAM,MAAKxC,SAAC,cAC9BF,EAAAA,EAAAA,KAACyC,EAAAA,GAAgB,CAACC,MAAM,MAAKxC,SAAC,cAC9BF,EAAAA,EAAAA,KAACyC,EAAAA,GAAgB,CAACC,MAAM,MAAKxC,SAAC,eAGlCF,EAAAA,EAAAA,KAAC2C,EAAAA,GAAU,CAAAzC,SACRnB,EAAc6D,KAAKC,IAClB1C,EAAAA,EAAAA,MAACqC,EAAAA,GAAS,CAAAtC,SAAA,EACRF,EAAAA,EAAAA,KAAC8C,EAAAA,GAAc,CAAA5C,SAAE2C,EAAKpB,QACtBzB,EAAAA,EAAAA,KAAC8C,EAAAA,GAAc,CAAA5C,SAAE2C,EAAKE,YACtB/C,EAAAA,EAAAA,KAAC8C,EAAAA,GAAc,CAAA5C,SAAE2C,EAAKG,YACtBhD,EAAAA,EAAAA,KAAC8C,EAAAA,GAAc,CAAA5C,SAAE2C,EAAKI,SAJRJ,EAAKK,sBAalC,C","sources":["views/food/Foods.js"],"sourcesContent":["import React, { useEffect, useState, createRef } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CTable,\n  CTableHead,\n  CTableRow,\n  CTableHeaderCell,\n  CTableBody,\n  CTableDataCell,\n  CNavItem,\n  CNavLink,\n  CTabContent,\n  CNav,\n  CTabPane,\n} from '@coreui/react'\n\nimport { supabase } from '../../helper/supabaseClient'\n\nconst Foods = () => {\n  const [activeKey, setActiveKey] = useState(1)\n  const [foods, setFoods] = useState([])\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [filteredFoods, setFilteredFoods] = useState([]);\n\n  useEffect(() => {\n    fetchFoods()\n  }, [])\n\n  const fetchFoods = async () => {\n    try {\n      const {\n        data: { user },\n      } = await supabase.auth.getUser()\n      // Fetch logged-in user's goals data\n      const { data, error } = await supabase\n        .from('foods')\n        .select('*')\n        .order('created_at', { ascending: false })\n\n      if (error) {\n        throw error\n      }\n\n      // Set Foods data in state\n      setFoods(data || [])\n      setFilteredFoods(data || [])\n    } catch (error) {\n      console.error('Error fetching Foods:', error.message)\n    }\n  }\n\n\n  const handleInput = (e)=>{\n    setSearchInput(e.target.value);\n\n    const result = [];\n    for(let i = 0; i < foods.length; i++)\n    {\n      let main = foods[i].name.toLowerCase();\n      let sub = e.target.value.toLowerCase();\n      if(main.includes(sub)){\n        result.push(foods[i]);\n      }\n    }\n    setFilteredFoods(result);\n  }\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardHeader>Foods</CCardHeader>\n        <CCardBody>\n          <CNav variant=\"pills\" role=\"tablist\">\n            <CNavItem role=\"presentation\">\n              <CNavLink\n                active={activeKey === 1}\n                component=\"button\"\n                role=\"tab\"\n                aria-controls=\"all-tab-pane\"\n                aria-selected={activeKey === 1}\n                onClick={() => setActiveKey(1)}\n              >\n                \n                <input type=\"text\" value={searchInput} onChange={handleInput} className='mx-2 px-2 form-control-sm' placeholder='search food here' style={{outline: 'none', borderRadius: '5px'}}/>\n              </CNavLink>\n             \n              \n            </CNavItem>\n          </CNav>\n          <CTabContent>\n            <CTabPane role=\"tabpanel\" aria-labelledby=\"all-tab-pane\" visible={activeKey === 1}>\n              <CTable hover>\n                <CTableHead>\n                  <CTableRow>\n                    <CTableHeaderCell scope=\"col\">Name</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Category</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Calories</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Unit</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {filteredFoods.map((food) => (\n                    <CTableRow key={food.id}>\n                      <CTableDataCell>{food.name}</CTableDataCell>\n                      <CTableDataCell>{food.category}</CTableDataCell>\n                      <CTableDataCell>{food.calories}</CTableDataCell>\n                      <CTableDataCell>{food.unit}</CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CTabPane>\n          </CTabContent>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default Foods\n\n"],"names":["Foods","activeKey","setActiveKey","useState","foods","setFoods","searchInput","setSearchInput","filteredFoods","setFilteredFoods","useEffect","fetchFoods","async","data","user","supabase","auth","getUser","error","from","select","order","ascending","console","message","_jsx","_Fragment","children","_jsxs","CCard","className","CCardHeader","CCardBody","CNav","variant","role","CNavItem","CNavLink","active","component","onClick","type","value","onChange","e","target","result","i","length","main","name","toLowerCase","sub","includes","push","placeholder","style","outline","borderRadius","CTabContent","CTabPane","visible","CTable","hover","CTableHead","CTableRow","CTableHeaderCell","scope","CTableBody","map","food","CTableDataCell","category","calories","unit","id"],"sourceRoot":""}